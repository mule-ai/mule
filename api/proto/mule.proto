syntax = "proto3";

package mule.v1;

option go_package = "github.com/mule-ai/mule/api/proto";

import "google/protobuf/timestamp.proto";

// MuleService provides gRPC endpoints for Mule functionality
service MuleService {
  // GetHeartbeat returns a simple heartbeat to check if the service is alive
  rpc GetHeartbeat(HeartbeatRequest) returns (HeartbeatResponse);
  
  // ListWorkflows returns all available workflows
  rpc ListWorkflows(ListWorkflowsRequest) returns (ListWorkflowsResponse);
  
  // GetWorkflow returns details about a specific workflow
  rpc GetWorkflow(GetWorkflowRequest) returns (GetWorkflowResponse);

  // ListProviders returns all genAI providers
  rpc ListProviders(ListProvidersRequest) returns (ListProvidersResponse);
  
  // ListAgents returns all available agents
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse);
  
  // GetAgent returns details about a specific agent
  rpc GetAgent(GetAgentRequest) returns (GetAgentResponse);
  
  // ListRunningWorkflows returns currently executing workflows
  rpc ListRunningWorkflows(ListRunningWorkflowsRequest) returns (ListRunningWorkflowsResponse);
  
  // ExecuteWorkflow starts a new workflow execution
  rpc ExecuteWorkflow(ExecuteWorkflowRequest) returns (ExecuteWorkflowResponse);
}

// Heartbeat messages
message HeartbeatRequest {}

message HeartbeatResponse {
  string status = 1;
  google.protobuf.Timestamp timestamp = 2;
  string version = 3;
}

// Provider messages
message ListProvidersRequest {}

message ListProvidersResponse {
  repeated Provider providers = 1;
}

message Provider {
  string name = 1;
}

// Workflow messages
message ListWorkflowsRequest {}

message ListWorkflowsResponse {
  repeated Workflow workflows = 1;
}

message GetWorkflowRequest {
  string name = 1;
}

message GetWorkflowResponse {
  Workflow workflow = 1;
}

message Workflow {
  string id = 1;
  string name = 2;
  string description = 3;
  bool is_default = 4;
  repeated WorkflowStep steps = 5;
  repeated string validation_functions = 6;
  repeated TriggerSettings triggers = 7;
  repeated TriggerSettings outputs = 8;
}

message WorkflowStep {
  string id = 1;
  int32 agent_id = 2;
  string agent_name = 3;
  string output_field = 4;
  TriggerSettings integration = 5;
}

message TriggerSettings {
  string integration = 1;
  string name = 2;
  map<string, string> data = 3;
}

// Agent messages
message ListAgentsRequest {}

message ListAgentsResponse {
  repeated Agent agents = 1;
}

message GetAgentRequest {
  int32 id = 1;
}

message GetAgentResponse {
  Agent agent = 1;
}

message Agent {
  int32 id = 1;
  string name = 2;
  string provider_name = 3;
  string model = 4;
  string prompt_template = 5;
  string system_prompt = 6;
  repeated string tools = 7;
  UDiffSettings udiff_settings = 8;
}

message UDiffSettings {
  bool enabled = 1;
}

// Running workflows messages
message ListRunningWorkflowsRequest {}

message ListRunningWorkflowsResponse {
  repeated RunningWorkflow running_workflows = 1;
}

message RunningWorkflow {
  string execution_id = 1;
  string workflow_name = 2;
  string status = 3;
  google.protobuf.Timestamp started_at = 4;
  repeated WorkflowStepResult step_results = 5;
  string current_step = 6;
}

message WorkflowStepResult {
  string step_id = 1;
  string status = 2;
  string content = 3;
  string error_message = 4;
  google.protobuf.Timestamp completed_at = 5;
}

// Execute workflow messages
message ExecuteWorkflowRequest {
  string workflow_name = 1;
  string prompt = 2;
  string path = 3;
}

message ExecuteWorkflowResponse {
  string execution_id = 1;
  string status = 2;
  string message = 3;
}